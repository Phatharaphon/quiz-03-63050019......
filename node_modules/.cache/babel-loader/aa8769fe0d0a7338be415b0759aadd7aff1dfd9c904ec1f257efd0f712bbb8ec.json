{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\quiz3\\\\src\\\\components\\\\Post.js\",\n  _s = $RefreshSig$();\nimport { Card, CardContent, Grid, IconButton } from \"@mui/material\";\nimport React from \"react\";\nimport { format } from \"date-fns\";\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = ({\n  post\n}) => {\n  _s();\n  //   const dateTime = new Date(post.dateTime);\n  //   const date = dateTime.getDate();\n  //   const month = dateTime.getMonth();\n  //   const year = dateTime.getFullYear();\n\n  //   const hour = dateTime.getHours();\n  //   const minute = dateTime.getMinutes();\n\n  const [posts, setPosts] = useState([{\n    id: 1,\n    text: \"post\"\n  }]);\n  const handleDelete = todoId => {\n    const ball = posts.filter(todo => todo.id !== todoId);\n    setPosts(ball);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: posts.map(todo => /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          children: format(new Date(post.dateTime), \"HH:mm\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: format(new Date(post.dateTime), \"dd  MMMM  yyyy\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => handleDelete(todo.id),\n            children: /*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Post, \"Ohw4zzruQeygKQmWXYme8fMQegE=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["Card","CardContent","Grid","IconButton","React","format","DeleteOutlineIcon","useState","jsxDEV","_jsxDEV","Post","post","_s","posts","setPosts","id","text","handleDelete","todoId","ball","filter","todo","children","map","container","spacing","item","xs","Date","dateTime","fileName","_jsxFileName","lineNumber","columnNumber","content","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Acer/quiz3/src/components/Post.js"],"sourcesContent":["import { Card, CardContent, Grid, IconButton } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\r\nimport { useState } from \"react\";\r\n\r\nconst Post = ({ post }) => {\r\n    //   const dateTime = new Date(post.dateTime);\r\n    //   const date = dateTime.getDate();\r\n    //   const month = dateTime.getMonth();\r\n    //   const year = dateTime.getFullYear();\r\n\r\n    //   const hour = dateTime.getHours();\r\n    //   const minute = dateTime.getMinutes();\r\n\r\n    const [posts, setPosts] = useState([{ id: 1, text: \"post\" }]);\r\n\r\n    const handleDelete = (todoId) => {\r\n        const ball = posts.filter((todo) => todo.id !== todoId);\r\n        setPosts(ball);\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            {posts.map((todo) => (\r\n                <CardContent>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={1}>\r\n                            {format(new Date(post.dateTime), \"HH:mm\")}\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            {format(new Date(post.dateTime), \"dd  MMMM  yyyy\")}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            {post.content}\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                            <IconButton onClick={() => handleDelete(todo.id)}>\r\n                                <DeleteOutlineIcon />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            ))}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Post;"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,WAAW,EAAEC,IAAI,EAAEC,UAAU,QAAQ,eAAe;AACnE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACvB;EACA;EACA;EACA;;EAEA;EACA;;EAEA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC;IAAEQ,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAO,CAAC,CAAC,CAAC;EAE7D,MAAMC,YAAY,GAAIC,MAAM,IAAK;IAC7B,MAAMC,IAAI,GAAGN,KAAK,CAACO,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACN,EAAE,KAAKG,MAAM,CAAC;IACvDJ,QAAQ,CAACK,IAAI,CAAC;EAClB,CAAC;EAED,oBACIV,OAAA,CAACT,IAAI;IAAAsB,QAAA,EACAT,KAAK,CAACU,GAAG,CAAEF,IAAI,iBACZZ,OAAA,CAACR,WAAW;MAAAqB,QAAA,eACRb,OAAA,CAACP,IAAI;QAACsB,SAAS;QAACC,OAAO,EAAE,CAAE;QAAAH,QAAA,gBACvBb,OAAA,CAACP,IAAI;UAACwB,IAAI;UAACC,EAAE,EAAE,CAAE;UAAAL,QAAA,EACZjB,MAAM,CAAC,IAAIuB,IAAI,CAACjB,IAAI,CAACkB,QAAQ,CAAC,EAAE,OAAO;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,eACPxB,OAAA,CAACP,IAAI;UAACwB,IAAI;UAACC,EAAE,EAAE,CAAE;UAAAL,QAAA,EACZjB,MAAM,CAAC,IAAIuB,IAAI,CAACjB,IAAI,CAACkB,QAAQ,CAAC,EAAE,gBAAgB;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACPxB,OAAA,CAACP,IAAI;UAACwB,IAAI;UAACC,EAAE,EAAE,CAAE;UAAAL,QAAA,EACZX,IAAI,CAACuB;QAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eACPxB,OAAA,CAACP,IAAI;UAACwB,IAAI;UAACC,EAAE,EAAE,CAAE;UAAAL,QAAA,eACbb,OAAA,CAACN,UAAU;YAACgC,OAAO,EAAEA,CAAA,KAAMlB,YAAY,CAACI,IAAI,CAACN,EAAE,CAAE;YAAAO,QAAA,eAC7Cb,OAAA,CAACH,iBAAiB;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAChB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC;AAACrB,EAAA,CAxCIF,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AA0CV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}